:py:mod:`anomalib.models.patchcore.utils.sampling.nearest_neighbors`
====================================================================

.. py:module:: anomalib.models.patchcore.utils.sampling.nearest_neighbors

.. autoapi-nested-parse::

   This module comprises PatchCore Sampling Methods for the embedding.

   - Nearest Neighbours



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   anomalib.models.patchcore.utils.sampling.nearest_neighbors.NearestNeighbors




.. py:class:: NearestNeighbors(n_neighbors: int)

   Bases: :py:obj:`anomalib.core.model.dynamic_module.DynamicBufferModule`

   Nearest Neighbours using brute force method and euclidean norm.

   :param n_neighbors: Number of neighbors to look at
   :type n_neighbors: int

   .. py:method:: fit(self, train_features: torch.Tensor)

      Saves the train features for NN search later.

      :param train_features: Training data
      :type train_features: Tensor


   .. py:method:: kneighbors(self, test_features: torch.Tensor) -> Tuple[torch.Tensor, torch.Tensor]

      Return k-nearest neighbors.

      It is calculated based on bruteforce method.

      :param test_features: test data
      :type test_features: Tensor

      :returns: distances, indices
      :rtype: Tuple[Tensor, Tensor]



